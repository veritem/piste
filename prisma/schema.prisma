generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  uid       String    @unique
  createdAt DateTime? @default(now())
  updatedAt DateTime  @updatedAt
  name      String
  username  String    @unique
  projects  Project[]
  habits    Habit[]
  tasks     Task[]
}

model Project {
  id          String        @id @default(uuid())
  name        String
  description String?
  userId      String
  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  tasks       Task[]
  status      ProjectStatus @default(ACTIVE)
}

model Task {
  id        String    @id @default(uuid())
  name      String
  Project   Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId String
  Sheduled  DateTime? @default(dbgenerated("NOW() + interval  ' 1 ' day"))
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  userId    String?
  user      User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
  completed Boolean   @default(false)
}

model Habit {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
  strikes   Strike[]
}

model Strike {
  id          String     @id @default(uuid())
  createdAt   DateTime?  @default(now()) @db.Timestamptz(6)
  updatedAt   DateTime   @updatedAt
  days        String[]
  Habit       Habit?     @relation(fields: [habitId], references: [id])
  habitId     String?
  name        String
  description String?
  activity    Activity[]
}

model Activity {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Strike    Strike?  @relation(fields: [strikeId], references: [id])
  strikeId  String?
}

enum ProjectStatus {
  ACTIVE
  INACTIVE
  ARCHIVED
}
